// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`preeval should keep getGlobal but remove window-related code 1`] = `
"function getGlobal() {
  if (typeof globalThis !== \\"undefined\\") {
    return globalThis;
  }
  if (typeof global !== \\"undefined\\") {
    return global;
  }
  if (typeof self !== \\"undefined\\") {
    return self;
  }
  return mockGlobal;
}"
`;

exports[`preeval should keep object members that look like window globals 1`] = `
"class Test {
  fetch: typeof global.fetch;
  constructor(options) {
    this.fetch = options.fetch;
  }
}"
`;

exports[`preeval should keep type parameters that look like window globals 1`] = `"type FooType = Generic<Foo>;"`;

exports[`preeval should not remove "location" in types only because it looks like a global variable 1`] = `
"interface IProps {
  fn: (location: string) => void;
}"
`;

exports[`preeval should remove usages of window scoped identifiers 1`] = `""`;
