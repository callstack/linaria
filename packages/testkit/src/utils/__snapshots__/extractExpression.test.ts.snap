// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extractExpression should extract expression 1`] = `
"let a = 1;
let b = 2;
const _exp = /*#__PURE__*/() => a + b;
function foo() {
  return _exp();
}"
`;

exports[`extractExpression should hoist functions 1`] = `
"let a = \\"foo\\";
let fn = obj => obj.className ?? '';
const _exp = /*#__PURE__*/() => a + fn({
  className: 'bar'
});
function foo() {
  return _exp();
}"
`;

exports[`extractExpression should ignore types 1`] = `
"let a = \\"foo\\";
let fn = (obj: Props) => obj.className ?? '';
const _exp = /*#__PURE__*/() => a + fn({
  className: 'bar'
});
function foo() {
  type Props = {
    className?: string;
    children?: React.ReactNode;
  };
  return _exp();
}"
`;

exports[`extractExpression should inline values and remove bindings 1`] = `
"const _exp = /*#__PURE__*/() => 3;
function foo() {
  return _exp();
}"
`;

exports[`extractExpression should rename identifier if it already exists in the root 1`] = `
"const a = 42;
let _a = 1;
let b = 2;
const _exp = /*#__PURE__*/() => _a + b;
function foo() {
  return _exp();
}"
`;
