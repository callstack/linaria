// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`collectTemplateDependencies hoist chain of statements 1`] = `
"import str from \\"module\\";
const _ref2 = str;

const _ref = _ref2 + \\"2\\";

const _exp = /*#__PURE__*/() => _ref;

function fn() {
  {
    const template = tag\`\${_exp}\`;
  }
}"
`;

exports[`collectTemplateDependencies hoist expressions 1`] = `
"import x from \\"module\\";

const _exp = /*#__PURE__*/() => 42;

const _exp2 = /*#__PURE__*/() => \\"test\\";

const _exp3 = /*#__PURE__*/() => () => \\"result\\";

const _exp4 = /*#__PURE__*/() => 21 * x;

function fn() {
  const value = 21;
  const variable = \\"test\\";
  const result = \\"result\\";
  const template = tag\`\${_exp}\${_exp2}\${_exp3}\${_exp4}\`;
}"
`;

exports[`collectTemplateDependencies hoistExpression with destructuring 1`] = `
"const _ref2 = \\"result\\";
const {
  variable: _ref
} = {
  variable: _ref2
};

const _exp = /*#__PURE__*/() => _ref;

function fn() {
  const template = tag\`\${_exp}\`;
}"
`;

exports[`collectTemplateDependencies hoistExpression with object 1`] = `
"const obj = {
  variable: \\"test\\"
};

const _exp = /*#__PURE__*/() => ({
  variable: \\"test\\"
}).variable;

function fn() {
  const template = tag\`\${_exp}\`;
}"
`;

exports[`collectTemplateDependencies non-hoistable expression 1`] = `
"Function parameters cannot be referenced in a Linaria template.
> 1 | function fn(arg) {
    |             ^^^
  2 |   {
  3 |     const base = \\"base\\";
  4 |     const variable = base + arg;"
`;

exports[`collectTemplateDependencies should hoist expressions after imports 1`] = `
"import { styled } from '@linaria/react';
import slugify from '../__fixtures__/slugify';

const _exp = /*#__PURE__*/() => slugify('test');

export const Title = styled.h1\`
  &:before {
    content: \\"\${_exp}\\"
  }
\`;"
`;
