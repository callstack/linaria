// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`applies CSS variables in style prop 1`] = `
<div
  className="mocked-styled-2 abcdefg"
  size={24}
  style={
    Object {
      "--bar": "20px",
      "--baz": "24px",
      "--foo": "tomato",
    }
  }
>
  This is a test
</div>
`;

exports[`does not filter attributes for components 1`] = `
<div>
  voila
</div>
`;

exports[`does not filter attributes for kebab cased custom elements 1`] = `
<my-element
  className="mocked-styled-14 abcdefg"
  unknownAttribute="voila"
>
  This is a test
</my-element>
`;

exports[`does not filter attributes for unknown tag 1`] = `
<definitelyunknowntag
  className="mocked-styled-16 abcdefg"
  hoverClass="voila"
>
  This is a test
</definitelyunknowntag>
`;

exports[`does not filter attributes for upper camel cased custom elements 1`] = `
<View
  className="mocked-styled-15 abcdefg"
  hoverClass="voila"
>
  This is a test
</View>
`;

exports[`filters unknown html attributes for HTML tag 1`] = `
<div
  className="mocked-styled-13 abcdefg"
>
  This is a test
</div>
`;

exports[`forwards as prop when wrapping another styled component 1`] = `
<a
  className="mocked-styled-12 abcdefg hijklmn abcdefg"
>
  This is a test
</a>
`;

exports[`handles wrapping another styled component 1`] = `
<div
  className="mocked-styled-10 abcdefg hijklmn abcdefg"
>
  This is a test
</div>
`;

exports[`merges CSS variables with custom style prop 1`] = `
<div
  className="mocked-styled-3 abcdefg"
  style={
    Object {
      "--foo": "tomato",
      "bar": "baz",
    }
  }
>
  This is a test
</div>
`;

exports[`provides linaria component className for composition as last item in props.className 1`] = `
<div
  className="some-another-class abcdefg abcdefg--primary abcdefg--accessibility"
>
  original classname used for composition
</div>
`;

exports[`renders component with display name and class name 1`] = `
<div
  className="mocked-styled-1 abcdefg"
>
  This is a test
</div>
`;

exports[`renders tag with display name and class name 1`] = `
<h1
  className="mocked-styled-0 abcdefg"
>
  This is a test
</h1>
`;

exports[`replaces custom component with as prop for primitive 1`] = `
<a
  className="mocked-styled-7 abcdefg"
  id="test"
>
  This is a test
</a>
`;

exports[`replaces primitive with as prop for custom component 1`] = `
<div
  className="mocked-styled-8 abcdefg"
  foo="bar"
  id="test"
  style={
    Object {
      "fontSize": 12,
    }
  }
>
  This is a test
</div>
`;

exports[`replaces simple component with as prop 1`] = `
<a
  className="mocked-styled-6 abcdefg"
  id="test"
>
  This is a test
</a>
`;

exports[`supports extra class prop 1`] = `
<div
  className="primary abcdefg"
>
  This is a test
</div>
`;

exports[`supports extra className prop 1`] = `
<div
  className="primary abcdefg"
>
  This is a test
</div>
`;
