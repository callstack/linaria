// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`removeDangerousCode should not remove class 1`] = `"class Test {}"`;

exports[`removeDangerousCode should remove \`window\` but keep \`setVersion\` function untouched 1`] = `
"let _win = undefined;
export function setVersion(packageName, packageVersion) {
  if (typeof _win !== 'undefined') {
    return null;
  }
}"
`;

exports[`removeDangerousCode should remove code under is-it-browser checks 1`] = `
"let method;
{
  console.log('it is not browser');
}
export function testFn(arg) {
  method(arg);
}"
`;

exports[`removeDangerousCode should replace body of react component with null 1`] = `
"export var Popup = /*#__PURE__*/function () {
  var Popup = function Popup() {
    return null;
  };
  Popup.displayName = 'Popup';
  return Popup;
}();"
`;

exports[`removeDangerousCode should simplify OR expression 1`] = `
"export function getHostname(opts) {
  return opts.hostname;
}"
`;

exports[`removeDangerousCode should simplify if statement 1`] = `
"{
  console.log('it is not browser');
}
{
  console.log('it is not browser');
}
{
  console.log('it is not browser');
}"
`;

exports[`removeDangerousCode should simplify ternary operator 1`] = `
"export function getHostname(opts) {
  return "localhost";
}"
`;

exports[`removeDangerousCode should simplify ternary operator 2`] = `
"export function getHostname(opts) {
  return "localhost";
}"
`;

exports[`removeDangerousCode should simplify ternary operator 3`] = `
"export function getHostname(opts) {
  return opts ? "localhost" : undefined;
}"
`;

exports[`removeDangerousCode should simplify ternary operator 4`] = `
"export function getHostname(opts) {
  return opts ? undefined : "localhost";
}"
`;
